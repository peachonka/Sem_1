{"ast":null,"code":"import axios from 'axios';\n// Базовый URL для mock API (json-server)\nconst API_URL = 'http://localhost:3001/products';\n// Функция для загрузки товаров\nexport const Products = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data; // Возвращаем данные товаров\n  } catch (error) {\n    console.error('Ошибка при загрузке товаров:', error);\n    throw error; // Пробрасываем ошибку, чтобы обработать её в компоненте\n  }\n};\n_c = Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["axios","API_URL","Products","response","get","data","error","console","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/3 семестр/Фронтенд и бекенд/Sem1/product-manager/src/api/products.js"],"sourcesContent":["import axios from 'axios';\r\n// Базовый URL для mock API (json-server)\r\nconst API_URL = 'http://localhost:3001/products';\r\n// Функция для загрузки товаров\r\nexport const Products = async () => {\r\n try {\r\n const response = await axios.get(API_URL);\r\n return response.data; // Возвращаем данные товаров\r\n } catch (error) {\r\n console.error('Ошибка при загрузке товаров:', error);\r\n throw error; // Пробрасываем ошибку, чтобы обработать её в компоненте\r\n }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAG,gCAAgC;AAChD;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACJ,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK,CAAC,CAAC;EACb;AACD,CAAC;AAACE,EAAA,GARWN,QAAQ;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}