{"ast":null,"code":"// Базовый URL для mock API (json-server)\nconst API_URL = 'http://localhost:3001/products';\n\n// Функция для загрузки товаров\nexport const fetchProducts = async () => {\n  try {\n    const response = await fetch(API_URL); // Используем fetch вместо axios\n    if (!response.ok) {\n      throw new Error('Ошибка при загрузке товаров');\n    }\n    const data = await response.json(); // Парсим JSON-ответ\n    return data; // Возвращаем данные товаров\n  } catch (error) {\n    console.error('Ошибка при загрузке товаров:', error);\n    throw error; // Пробрасываем ошибку, чтобы обработать её в компоненте\n  }\n};","map":{"version":3,"names":["API_URL","fetchProducts","response","fetch","ok","Error","data","json","error","console"],"sources":["C:/Users/User/Desktop/3 семестр/Фронтенд и бекенд/Sem1/product-manager/src/api/products.js"],"sourcesContent":["// Базовый URL для mock API (json-server)\r\nconst API_URL = 'http://localhost:3001/products';\r\n\r\n// Функция для загрузки товаров\r\nexport const fetchProducts = async () => {\r\n  try {\r\n    const response = await fetch(API_URL); // Используем fetch вместо axios\r\n    if (!response.ok) {\r\n      throw new Error('Ошибка при загрузке товаров');\r\n    }\r\n    const data = await response.json(); // Парсим JSON-ответ\r\n    return data; // Возвращаем данные товаров\r\n  } catch (error) {\r\n    console.error('Ошибка при загрузке товаров:', error);\r\n    throw error; // Пробрасываем ошибку, чтобы обработать её в компоненте\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,gCAAgC;;AAEhD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC,CAAC,CAAC;IACvC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}